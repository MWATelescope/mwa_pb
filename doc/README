- Test / examples see :

 - Test case - to verify if the beam_correct_image.py script works correctly and gives correct results
    - Test data is located in data/test/ : wsclean_1067806072-0002-XX-dirty.fits wsclean_1067806072-0002-YY-dirty.fits  wsclean_1067806072-0002-XY-dirty.fits wsclean_1067806072-0002-XYi-dirty.fits
      and also template results are provided in data/test/ : I.fits , Q.fits , U.fits and V.fits

   - test of beam_correct_image.py script :
      python ./beam_correct_image.py --xx_file=wsclean_1067806072-0002-XX-dirty.fits --yy_file=wsclean_1067806072-0002-YY-dirty.fits --xy_file=wsclean_1067806072-0002-XY-dirty.fits --xyi_file=wsclean_1067806072-0002-XYi-dirty.fits -b 0,0,0,0,2,2,2,2,4,4,4,4,6,6,6,6 --model=2016
  
   - Comparison with template results ( files in data/test/ : I.fits , Q.fits , U.fits and V.fits )
      ds9 -scale zscale I.fits &
   vs. template :
      ds9 -scale zscale mwa_pb/data/test/I.fits &
   
   If images seem to look the same in ds9 just try binary diff as the images should actually be identical (at least until header file changes) : diff I.fits mwa_pb/data/test/I.fits


  - Test case of beam generation :
    - analytic model :

      python ./make_beam_test.py -f wsclean_1067806072-0002-XX-dirty.fits -m 1067806072.metafits --obsid=1067806072 --model=analytic
      Compare :
         ds9 -scale zscale wsclean_1067806072-0002-XX-dirty_beamXX.fits &
         ds9 -scale zscale wsclean_1067806072-0002-XX-dirty_beamYY.fits &
      Template results to compare to : data/test/wsclean_1067806072-0002-XX-dirty_beamXX-ANALYTIC.fits and data/test/wsclean_1067806072-0002-XX-dirty_beamYY-ANALYTIC.fits
         ds9 -scale zscale data/test/wsclean_1067806072-0002-XX-dirty_beamXX-ANALYTIC.fits &
         ds9 -scale zscale data/test/wsclean_1067806072-0002-XX-dirty_beamYY-ANALYTIC.fits &

    - 2014 model also known as advanced or Average embedded element mode (AEE) [Paper reference : A. Sutinjo et al (2015) : http://adsabs.harvard.edu/abs/2015RaSc...50...52S]
   
      python ./make_beam_test.py -f wsclean_1067806072-0002-XX-dirty.fits -m 1067806072.metafits --obsid=1067806072 --model=2014
      Compare results :
        ds9 -scale zscale wsclean_1067806072-0002-XX-dirty_beamXX.fits &
        ds9 -scale zscale wsclean_1067806072-0002-XX-dirty_beamYY.fits &
      Template results to compare to : 
        ds9 -scale zscale data/test/wsclean_1067806072-0002-XX-dirty_beamXX-2014.fits &
        ds9 -scale zscale data/test/wsclean_1067806072-0002-XX-dirty_beamYY-2014.fits &

    - 2016 model ( full embeded elment model) , [Paper reference Sokolowski et al (2016) : http://adsabs.harvard.edu/abs/2017PASA...34...62S ]
      python ./make_beam_test.py -f wsclean_1067806072-0002-XX-dirty.fits -m 1067806072.metafits --obsid=1067806072 --model=2016
      Compare results :
         ds9 -scale zscale wsclean_1067806072-0002-XX-dirty_beamXX.fits &
         
      Template results to compare to :
         ds9 -scale zscale data/test/wsclean_1067806072-0002-XX-dirty_beamXX-2016.fits &

  - Test case of calculation Jones matrix :
    python ./calc_jones.py  > calc_jones.out 2>&1
    
    check if the same as template :
    diff calc_jones.out data/test/calc_jones.out
  


   - Test case for mwa_sensitivity.py :

     python mwa_sensitivity.py -b 18,13,8,3,17,12,7,2,16,11,6,1,15,10,5,0 -c 169 -p all -g 0  -m full_EE > mwa_sensitivity_test1.out 2>&1
     python ./mwa_sensitivity.py -c 169 -p all -g 0  -m full_EE > mwa_sensitivity_test2.out 2>&1

     compare output files with templates in :

       diff mwa_sensitivity_test1.out data/test/mwa_sensitivity_test1.out
       diff mwa_sensitivity_test2.out data/test/mwa_sensitivity_test2.out
  

- Other usage examples :

   # generate XX and YY beams for a given image and set of delays
      python make_beam_test.py -f wsclean_1067806072-0002-XX-dirty.fits -d 0,0,0,0,2,2,2,2,4,4,4,4,6,6,6,6 -v --model=2016
      python make_beam_test.py -f wsclean_1067806072-0002-XX-dirty.fits -g 11 -v --model=2016
      python make_beam_test.py -f 2456603.366393_img_200.335MHz_chan000of032_cal001_peel_000_000_t0000XX.fits -g 11 -v --model=2016  --obsid=1067806072 --freq_mhz=203.52
      python make_beam_test.py -f 2456603.366393_img_200.335MHz_chan000of032_cal001_peel_000_000_t0000XX.fits  -d 0,0,0,0,2,2,2,2,4,4,4,4,6,6,6,6 -v --model=2016  --obsid=1067806072  --freq_mhz=203.51 

      Using delays from metafits (option --obsid is not required if obsid can be obtained as the first 10 digits of metafits filename) :
        python make_beam_test.py -f 2456603.366393_img_200.335MHz_chan000of032_cal001_peel_000_000_t0000XX.fits --model=2016 --freq_mhz=203.51 -m 1067806072.metafits

   # with delays passed by parameter : -b 0,0,0,0,2,2,2,2,4,4,4,4,6,6,6,6
      python ./beam_correct_image.py --xx_file=wsclean_1067806072-0002-XX-dirty.fits --yy_file=wsclean_1067806072-0002-YY-dirty.fits --xy_file=wsclean_1067806072-0002-XY-dirty.fits --xyi_file=wsclean_1067806072-0002-XYi-dirty.fits -b 0,0,0,0,2,2,2,2,4,4,4,4,6,6,6,6 --model=2016

   # with delays taken from gridpoint = 11 : -g 11
      python ./beam_correct_image.py --xx_file=wsclean_1067806072-0002-XX-dirty.fits --yy_file=wsclean_1067806072-0002-YY-dirty.fits --xy_file=wsclean_1067806072-0002-XY-dirty.fits --xyi_file=wsclean_1067806072-0002-XYi-dirty.fits -g 11 --model=2016

   # beam correction using new FEE (2016) model :
      python ./beam_correct_image.py --xx_file=wsclean_1067806072-0002-XX-dirty.fits --yy_file=wsclean_1067806072-0002-YY-dirty.fits --xy_file=wsclean_1067806072-0002-XY-dirty.fits --xyi_file=wsclean_1067806072-0002-XYi-dirty.fits


   # beam correction using Analytic model :
      python ./beam_correct_image.py --xx_file=wsclean_1067806072-0002-XX-dirty.fits --yy_file=wsclean_1067806072-0002-YY-dirty.fits --xy_file=wsclean_1067806072-0002-XY-dirty.fits --xyi_file=wsclean_1067806072-0002-XYi-dirty.fits --model=analytic

   # Sensitivity calculation using FEE (2016) model :
      python ./mwa_sensitivity.py -b 0,0,0,0,2,2,2,2,4,4,4,4,6,6,6,6 -c 169 -p all  -m full_EE 

      for zenith gridpoint (0) , frequency 185.6 MHz :
      python ./mwa_sensitivity.py -f 185.6 --model 2016 --pointing_za_deg 5 --pointing_az_deg 0 --antnum=60 --inttime=120 -p all --gridpoint=0 -g 1193567480


- Calculation of Jones matrix for any direction :
    Az=90 deg, zenith angle = 45 deg , freq = 185 MHz :
    python calc_jones.py  --az=90 --za=45 --freq=185 

    Zenith , freq = 150 MHz :
       python calc_jones.py  --az=0 --za=0 --freq=150


- Files needed for beam model:
    2016 beam model : 
       mwa_full_embedded_element_pattern.h5
    2015 beam model : 
       Jmatrix.fits
       ZMatrix.fits

- Files needed for sensitivity calculation:
   radio408.RaDec.fits


- Noramlly they can be found in mwa_pb/data/ and to get 2016 model large H5 file 
   wget http://cerberus.mwa128t.org/mwa_full_embedded_element_pattern.h5

